


'use client'

import { useState } from "react"
import { motion } from "framer-motion"
import { Mail, LinkedinIcon, GithubIcon, InstagramIcon, TwitterIcon, Send, MapPin, ChevronLeft, ChevronRight, ExternalLink, Calendar, Code, Zap, Star } from "lucide-react"

const Projects = () => {
    const [formData, setFormData] = useState({
        name: "",
        email: "",
        subject: "",
        message: "",
    })

    const [isSubmitting, setIsSubmitting] = useState(false)
    const [currentSlide, setCurrentSlide] = useState(0)

    const socialLinks = [
        {
            name: "LinkedIn",
            icon: <LinkedinIcon className="w-6 h-6" />,
            url: "https://www.linkedin.com/in/prawin-kumar-1506/",
            color: "hover:text-blue-700 dark:hover:text-blue-400",
        },
        {
            name: "GitHub",
            icon: <GithubIcon className="w-6 h-6" />,
            url: "https://github.com/prawinspk",
            color: "hover:text-gray-800 dark:hover:text-gray-300",
        },
        {
            name: "Instagram",
            icon: <InstagramIcon className="w-6 h-6" />,
            url: "https://www.instagram.com/prawin._.spk/",
            color: "hover:text-pink-600 dark:hover:text-pink-400",
        },
        {
            name: "Twitter",
            icon: <TwitterIcon className="w-6 h-6" />,
            url: "https://x.com/JEEAsp39595",
            color: "hover:text-blue-500 dark:hover:text-blue-400",
        },
        {
            name: "Email",
            icon: <Mail className="w-6 h-6" />,
            url: "mailto:prawinkumar1506@gmail.com",
            color: "hover:text-red-600 dark:hover:text-red-400",
        },
    ]

    const featuredProjects = [
        {
            title: "EcoFinds – Sustainable Second-Hand Marketplace",
            period: "June 2025 – Present",
            description: "Built a sustainable marketplace for buying and selling pre-loved goods with React.js frontend, Flask backend and MongoDB for concurrent listings and transactions.",
            skills: ["React.js", "Next.js", "Flask", "MongoDB", "Firebase Auth", "Tailwind CSS"],
            category: "Full-Stack",
            hasVideo: true,
            gradient: "from-green-500 to-emerald-600"
        },
        {
            title: "U R Hired – Enhanced Job Screening with AI",
            period: "March 2025 – Present",
            description: "AI-powered recruitment platform with fast React.js (Vite) frontend and scalable Flask-MongoDB backend. Automates job screening, interview evaluations, and coding assessments.",
            skills: ["React.js", "Vite", "Flask", "MongoDB", "AI/ML", "Python"],
            category: "AI Platform",
            hasVideo: true,
            gradient: "from-blue-500 to-indigo-600"
        }
    ]

    const otherProjects = [
        {
            title: "Smart Engineering Graphics Assessment Tool (SEGAT)",
            description: "AI/ML-powered tool to automatically analyze and solve engineering graphics questions, generating algorithms and drawing answers in 2D.",
            skills: ["Python", "Flask", "Firebase", "ChatGPT API", "AutoCAD AI", "HTML", "Tailwind CSS", "JavaScript"],
            category: "AI/ML",
            gradient: "from-purple-500 to-violet-600",
            icon: "🚀"
        },
        {
            title: "Task Management System using Crew AI",
            description: "A robust task assignment system using multi-AI agents (task assigner, reassigner, load manager) with supervisor LLM and dynamic task splitting.",
            skills: ["Python", "CrewAI", "Gemini", "OpenAI", "CSV", "CLI", "API"],
            category: "AI Orchestration",
            gradient: "from-orange-500 to-red-600",
            icon: "🤖"
        },
        {
            title: "VoyageMind – AI Travel Planner",
            period: "March 2025 - Present",
            description: "AI-powered travel planner that crafts personalized itineraries based on user preferences, budgets, and destinations with intelligent suggestions.",
            skills: ["Python", "Generative AI", "React.js", "API Integration"],
            category: "AI Platform",
            gradient: "from-cyan-500 to-blue-600",
            icon: "🧳"
        },
        {
            title: "ChessMate - Ultimate Chess Learning Platform",
            period: "September 2024 – November 2024",
            description: "Java-based interactive chess learning platform with AI-powered ChessBot, puzzles, and grandmasters' games, being developed as full-stack web application.",
            skills: ["Java", "React.js", "Chess Engine", "AI Bot", "Game Logic"],
            category: "Educational",
            gradient: "from-amber-500 to-orange-600",
            icon: "♟️"
        },
        {
            title: "AGS Scientific Company Flutter App",
            description: "E-commerce-style Flutter app featuring login, order history, product catalog, price lists, enquiries, and chatbot with vector database search.",
            skills: ["Flutter", "Firebase", "Android Studio", "Vector DB", "Chatbot"],
            category: "Mobile App",
            gradient: "from-teal-500 to-green-600",
            icon: "🛒"
        },
        {
            title: "Resume Parsing System",
            description: "System to parse uploaded resumes using LLMs and extract structured data for recruitment matching with intelligent skill extraction.",
            skills: ["Flask", "Python", "LLM", "Document Processing", "Data Extraction"],
            category: "AI Tool",
            gradient: "from-rose-500 to-pink-600",
            icon: "📄"
        }
    ]

    const handleInputChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value,
        })
    }

    const handleSubmit = async (e) => {
        e.preventDefault()
        setIsSubmitting(true)

        setTimeout(() => {
            setIsSubmitting(false)
            setFormData({ name: "", email: "", subject: "", message: "" })
            alert("Message sent successfully!")
        }, 2000)
    }

    const nextSlide = () => {
        setCurrentSlide((prev) => (prev + 1) % Math.ceil(otherProjects.length / 2))
    }

    const prevSlide = () => {
        setCurrentSlide((prev) => (prev - 1 + Math.ceil(otherProjects.length / 2)) % Math.ceil(otherProjects.length / 2))
    }

    return (
        <div
            className="min-h-screen pt-24 pb-16 bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                {/* Header */}
                <motion.div
                    initial={{opacity: 0, y: 30}}
                    animate={{opacity: 1, y: 0}}
                    className="text-center mb-16"
                >
                    <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-6">
                        Get in Touch with Prawin
                    </h1>
                    <p className="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
                        Let's connect and discuss opportunities, collaborations, or just have a chat about technology
                        and innovation. I'm always excited to meet new people!
                    </p>
                </motion.div>

                {/* Featured Projects Section */}
                <motion.div
                    initial={{opacity: 0, y: 30}}
                    animate={{opacity: 1, y: 0}}
                    transition={{delay: 0.2}}
                    className="mb-16"
                >
                    <div className="text-center mb-12">
                        <h2 className="text-3xl md:text-4xl font-bold text-gray-800 dark:text-gray-200 mb-4">
                            <Star className="inline-block w-8 h-8 text-yellow-500 mr-2"/>
                            Featured Projects
                        </h2>
                        <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                            Showcase of my latest and most impactful projects with video demonstrations
                        </p>
                    </div>

                    <div className="grid lg:grid-cols-2 gap-8">
                        {featuredProjects.map((project, index) => (
                            <motion.div
                                key={index}
                                initial={{opacity: 0, y: 30}}
                                animate={{opacity: 1, y: 0}}
                                transition={{delay: 0.3 + index * 0.1}}
                                whileHover={{y: -5}}
                                className="relative group"
                            >
                                <div
                                    className={`absolute inset-0 bg-gradient-to-r ${project.gradient} rounded-3xl opacity-0 group-hover:opacity-10 transition-opacity duration-300`}/>
                                <div
                                    className="relative p-8 rounded-3xl bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-gray-200 dark:border-gray-700 shadow-lg hover:shadow-xl transition-all duration-300">
                                    <div className="flex items-start justify-between mb-4">
                                        <div
                                            className={`inline-block px-3 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${project.gradient} text-white`}>
                                            {project.category}
                                        </div>
                                        {project.hasVideo && (
                                            <div className="flex items-center text-xs text-gray-500 dark:text-gray-400">
                                                <div className="w-2 h-2 bg-red-500 rounded-full mr-1 animate-pulse"/>
                                                Video Available
                                            </div>
                                        )}
                                    </div>

                                    <h3 className="text-xl font-bold text-gray-800 dark:text-gray-200 mb-2">
                                        {project.title}
                                    </h3>

                                    {project.period && (
                                        <div
                                            className="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-3">
                                            <Calendar className="w-4 h-4 mr-1"/>
                                            {project.period}
                                        </div>
                                    )}

                                    <p className="text-gray-600 dark:text-gray-400 mb-4 leading-relaxed">
                                        {project.description}
                                    </p>

                                    <div className="flex flex-wrap gap-2">
                                        {project.skills.map((skill, skillIndex) => (
                                            <span
                                                key={skillIndex}
                                                className="px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-700 dark:text-gray-300 rounded-full"
                                            >
                                                {skill}
                                            </span>
                                        ))}
                                    </div>
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </motion.div>

                {/* Other Projects Section with Horizontal Slider */}
                <motion.div
                    initial={{opacity: 0, y: 30}}
                    animate={{opacity: 1, y: 0}}
                    transition={{delay: 0.4}}
                    className="mb-16"
                >
                    <div className="text-center mb-12">
                        <h2 className="text-3xl md:text-4xl font-bold text-gray-800 dark:text-gray-200 mb-4">
                            <Code className="inline-block w-8 h-8 text-blue-500 mr-2"/>
                            Other Projects
                        </h2>
                        <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                            A collection of innovative projects spanning AI, web development, and mobile applications
                        </p>
                    </div>

                    <div className="relative">
                        {/* Slider Container */}
                        <div className="overflow-hidden rounded-3xl">
                            <motion.div
                                className="flex transition-transform duration-500 ease-in-out"
                                style={{transform: `translateX(-${currentSlide * 100}%)`}}
                            >
                                {Array.from({length: Math.ceil(otherProjects.length / 2)}).map((_, slideIndex) => (
                                    <div key={slideIndex} className="w-full flex-shrink-0">
                                        <div className="grid md:grid-cols-2 gap-6 p-4">
                                            {otherProjects.slice(slideIndex * 2, slideIndex * 2 + 2).map((project, index) => (
                                                <motion.div
                                                    key={index}
                                                    whileHover={{scale: 1.02}}
                                                    className="relative group"
                                                >
                                                    <div
                                                        className={`absolute inset-0 bg-gradient-to-r ${project.gradient} rounded-2xl opacity-0 group-hover:opacity-10 transition-opacity duration-300`}/>
                                                    <div
                                                        className="relative p-6 rounded-2xl bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-gray-200 dark:border-gray-700 shadow-md hover:shadow-lg transition-all duration-300">
                                                        <div className="flex items-start justify-between mb-4">
                                                            <div className="text-3xl">{project.icon}</div>
                                                            <div
                                                                className={`inline-block px-2 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${project.gradient} text-white`}>
                                                                {project.category}
                                                            </div>
                                                        </div>

                                                        <h3 className="text-lg font-bold text-gray-800 dark:text-gray-200 mb-2">
                                                            {project.title}
                                                        </h3>

                                                        {project.period && (
                                                            <div
                                                                className="flex items-center text-xs text-gray-500 dark:text-gray-400 mb-3">
                                                                <Calendar className="w-3 h-3 mr-1"/>
                                                                {project.period}
                                                            </div>
                                                        )}

                                                        <p className="text-sm text-gray-600 dark:text-gray-400 mb-4 leading-relaxed">
                                                            {project.description}
                                                        </p>

                                                        <div className="flex flex-wrap gap-1">
                                                            {project.skills.slice(0, 4).map((skill, skillIndex) => (
                                                                <span
                                                                    key={skillIndex}
                                                                    className="px-2 py-1 text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-700 dark:text-gray-300 rounded-full"
                                                                >
                                                                    {skill}
                                                                </span>
                                                            ))}
                                                            {project.skills.length > 4 && (
                                                                <span
                                                                    className="px-2 py-1 text-xs font-medium bg-gray-200 dark:bg-slate-600 text-gray-600 dark:text-gray-400 rounded-full">
                                                                    +{project.skills.length - 4} more
                                                                </span>
                                                            )}
                                                        </div>
                                                    </div>
                                                </motion.div>
                                            ))}
                                        </div>
                                    </div>
                                ))}
                            </motion.div>
                        </div>

                        {/* Navigation Buttons */}
                        <motion.button
                            onClick={prevSlide}
                            whileHover={{scale: 1.1}}
                            whileTap={{scale: 0.95}}
                            className="absolute left-4 top-1/2 -translate-y-1/2 p-3 rounded-full bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-gray-200 dark:border-gray-700 shadow-lg hover:shadow-xl transition-all duration-300"
                        >
                            <ChevronLeft className="w-6 h-6 text-gray-600 dark:text-gray-400"/>
                        </motion.button>

                        <motion.button
                            onClick={nextSlide}
                            whileHover={{scale: 1.1}}
                            whileTap={{scale: 0.95}}
                            className="absolute right-4 top-1/2 -translate-y-1/2 p-3 rounded-full bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-gray-200 dark:border-gray-700 shadow-lg hover:shadow-xl transition-all duration-300"
                        >
                            <ChevronRight className="w-6 h-6 text-gray-600 dark:text-gray-400"/>
                        </motion.button>

                        {/* Slide Indicators */}
                        <div className="flex justify-center mt-6 space-x-2">
                            {Array.from({length: Math.ceil(otherProjects.length / 2)}).map((_, index) => (
                                <button
                                    key={index}
                                    onClick={() => setCurrentSlide(index)}
                                    className={`w-3 h-3 rounded-full transition-all duration-300 ${
                                        index === currentSlide
                                            ? 'bg-purple-600 w-8'
                                            : 'bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'
                                    }`}
                                />
                            ))}
                        </div>
                    </div>
                </motion.div>

                {/* Contact Section */}
                <div className="grid lg:grid-cols-2 gap-12">
                    {/* Contact Information */}
                    <motion.div
                        initial={{opacity: 0, x: -50}}
                        animate={{opacity: 1, x: 0}}
                        transition={{delay: 0.6}}
                        className="space-y-8"
                    >
                        {/* Contact Details */}
                        <div
                            className="p-8 rounded-3xl bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm border border-purple-200 dark:border-purple-800 shadow-lg">
                            <h2 className="text-3xl font-bold text-gray-800 dark:text-gray-200 mb-6">Contact
                                Information</h2>

                            <div className="space-y-4">
                                <motion.div whileHover={{x: 10}} className="flex items-center">
                                    <div className="p-3 bg-purple-100 dark:bg-purple-900 rounded-2xl mr-4">
                                        <Mail className="w-6 h-6 text-purple-600 dark:text-purple-400"/>
                                    </div>
                                    <div>
                                        <p className="text-sm text-gray-600 dark:text-gray-400">Email</p>
                                        <a
                                            href="mailto:prawinkumar1506@gmail.com"
                                            className="text-lg font-medium text-gray-800 dark:text-gray-200 hover:text-purple-600 dark:hover:text-purple-400 transition-colors"
                                        >
                                            prawinkumar1506@gmail.com
                                        </a>
                                    </div>
                                </motion.div>

                                <motion.div whileHover={{x: 10}} className="flex items-center">
                                    <div className="p-3 bg-blue-100 dark:bg-blue-900 rounded-2xl mr-4">
                                        <MapPin className="w-6 h-6 text-blue-600 dark:text-blue-400"/>
                                    </div>
                                    <div>
                                        <p className="text-sm text-gray-600 dark:text-gray-400">Location</p>
                                        <p className="text-lg font-medium text-gray-800 dark:text-gray-200">Chennai,
                                            Tamil Nadu, India</p>
                                    </div>
                                </motion.div>
                            </div>
                        </div>

                        {/* Social Links */}
                        <div
                            className="p-8 rounded-3xl bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm border border-purple-200 dark:border-purple-800 shadow-lg">
                            <h3 className="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-6">Connect with
                                Me</h3>

                            <div className="grid grid-cols-2 sm:grid-cols-3 gap-4">
                                {socialLinks.map((social, index) => (
                                    <motion.a
                                        key={index}
                                        href={social.url}
                                        target="_blank"
                                        rel="noopener noreferrer"
                                        initial={{opacity: 0, y: 20}}
                                        animate={{opacity: 1, y: 0}}
                                        transition={{delay: 0.7 + index * 0.1}}
                                        whileHover={{scale: 1.05, y: -5}}
                                        whileTap={{scale: 0.95}}
                                        className={`flex flex-col items-center p-4 rounded-2xl bg-gradient-to-br from-gray-50 to-gray-100 dark:from-slate-700 dark:to-slate-800 border border-gray-200 dark:border-gray-600 text-gray-600 dark:text-gray-400 ${social.color} transition-all duration-300 hover:shadow-lg`}
                                    >
                                        {social.icon}
                                        <span className="text-sm font-medium mt-2">{social.name}</span>
                                    </motion.a>
                                ))}
                            </div>
                        </div>
                    </motion.div>

                    {/* Contact Form */}
                    <motion.div
                        initial={{opacity: 0, x: 50}}
                        animate={{opacity: 1, x: 0}}
                        transition={{delay: 0.8}}
                        className="p-8 rounded-3xl bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm border border-purple-200 dark:border-purple-800 shadow-lg"
                    >
                        <h2 className="text-3xl font-bold text-gray-800 dark:text-gray-200 mb-6">Send a Message</h2>

                        <form onSubmit={handleSubmit} className="space-y-6">
                            <div className="grid md:grid-cols-2 gap-6">
                                <motion.div initial={{opacity: 0, y: 20}} animate={{opacity: 1, y: 0}}
                                            transition={{delay: 0.9}}>
                                    <label
                                        className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Name</label>
                                    <input
                                        type="text"
                                        name="name"
                                        value={formData.name}
                                        onChange={handleInputChange}
                                        required
                                        className="w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 bg-white dark:bg-slate-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors"
                                        placeholder="Your Name"
                                    />
                                </motion.div>

                                <motion.div initial={{opacity: 0, y: 20}} animate={{opacity: 1, y: 0}}
                                            transition={{delay: 1.0}}>
                                    <label
                                        className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
                                    <input
                                        type="email"
                                        name="email"
                                        value={formData.email}
                                        onChange={handleInputChange}
                                        required
                                        className="w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 bg-white dark:bg-slate-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors"
                                        placeholder="your.email@example.com"
                                    />
                                </motion.div>
                            </div>

                            <motion.div initial={{opacity: 0, y: 20}} animate={{opacity: 1, y: 0}}
                                        transition={{delay: 1.1}}>
                                <label
                                    className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Subject</label>
                                <input
                                    type="text"
                                    name="subject"
                                    value={formData.subject}
                                    onChange={handleInputChange}
                                    required
                                    className="w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 bg-white dark:bg-slate-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors"
                                    placeholder="What's this about?"
                                />
                            </motion.div>

                            <motion.div initial={{opacity: 0, y: 20}} animate={{opacity: 1, y: 0}}
                                        transition={{delay: 1.2}}>
                                <label
                                    className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Message</label>
                                <textarea
                                    name="message"
                                    value={formData.message}
                                    onChange={handleInputChange}
                                    required
                                    rows={6}
                                    className="w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-600 bg-white dark:bg-slate-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-colors resize-none"
                                    placeholder="Tell me about your project, idea, or just say hello!"
                                />
                            </motion.div>

                            <motion.button
                                type="submit"
                                disabled={isSubmitting}
                                initial={{opacity: 0, y: 20}}
                                animate={{opacity: 1, y: 0}}
                                transition={{delay: 1.3}}
                                whileHover={{scale: 1.02}}
                                whileTap={{scale: 0.98}}
                                className="w-full px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
                            >
                                {isSubmitting ? (
                                    <motion.div
                                        animate={{rotate: 360}}
                                        transition={{duration: 1, repeat: Infinity, ease: "linear"}}
                                        className="w-6 h-6 border-2 border-white border-t-transparent rounded-full"
                                    />
                                ) : (
                                    <>
                                        <Send className="w-5 h-5 mr-2"/>
                                        Send Message
                                    </>
                                )}
                            </motion.button>
                        </form>
                    </motion.div>
                </div>
            </div>
        </div>
    )
}

export default Projects
